// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 상태 추적 + 검색 + 알림용 테이블
model FlightStatusHistory {
  id           Int      @id @default(autoincrement())
  flightNumber String
  std          String // 예정 출발 시간 (HHmm)
  etd          String? // 실제 출발 시간
  prevStatus   String?
  newStatus    String?
  changedAt    DateTime @default(now())

  airlineKor  String?
  airlineEng  String?
  airport     String?
  boardingKor String?
  boardingEng String?
  arrivedKor  String?
  arrivedEng  String?
  gate        String?
  io          String? // 출/도착 구분 (I/O)
  line        String? // 국내/국제선 (D/I)
  city        String?
  rmkKor      String?
  rmkEng      String?

  @@unique([flightNumber, std])
}

model PushSubscription {
  id          Int      @id @default(autoincrement())
  endpoint    String   @unique
  auth        String
  p256dh      String
  userId      String // 로그인된 사용자 ID
  airportCode String
  lineType    String
  ioType      String
  enabled     Boolean  @default(false) // 사용자가 스위치 켜놓은 상태인지 여부
  createdAt   DateTime @default(now())

  @@unique([userId, airportCode, lineType, ioType]) // 중복 구독 방지
}
